{"version":3,"sources":["pages/MovieCast/CastItem/index.js","pages/MovieCast/CastItem/CastItem.jsx","pages/MovieCast/MovieCast.jsx","pages/MovieCast/index.js"],"names":["CastItem","profile_path","name","character","src","temp","alt","width","MovieCast","PropTypes","prop","state","cast","loader","movieApp","fetchActorsDetails","this","props","match","params","movieId","then","setState","catch","response","status","history","push","console","log","casts","length","map","id","Loader","Component"],"mappings":"mOAEeA,ECEE,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAvB,OACf,+BACE,qBAAKC,IAAKH,EAAY,0CAAsCA,GAAtC,UAA0DI,KAAQC,IAAKJ,EAAMK,MAAM,QACzG,4BAAIL,IACJ,4BAAIC,Q,QCFaK,E,4MACnBC,UAAY,CACVC,KAAMD,K,EAGRE,MAAQ,CACNC,KAAM,GACNC,QAAQ,G,kEAGW,IAAD,OAClBC,IACGC,mBAAmBC,KAAKC,MAAMC,MAAMC,OAAOC,SAC3CC,MAAK,SAACT,GAAD,OAAU,EAAKU,SAAS,CAAEV,OAAMC,QAAQ,OAC7CU,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SACR,GAAwB,MAApBA,EAASC,OACX,OAAO,EAAKR,MAAMS,QAAQC,KAAK,QAEjCC,QAAQC,IAAIL,EAASC,OAAQ,yB,+BAIzB,IAAD,EACkBT,KAAKL,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACRiB,EAAQlB,EAAKmB,OACjB,6BACGnB,EAAKoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIhC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,cAAC,EAAD,CAAmBF,aAAcA,EAAcC,KAAMA,EAAMC,UAAWA,GAAvD8B,QAInB,2DAEF,OAAO,mCAAGpB,EAAS,cAACqB,EAAA,EAAD,IAAaJ,Q,GAjCGK,aCJxB3B","file":"static/js/MovieCast.33617541.chunk.js","sourcesContent":["import CastItem from './CastItem';\n\nexport default CastItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport temp from \"../../../images/template.png\";\n\nconst CastItem = ({ profile_path, name, character }) => (\n  <li>\n    <img src={profile_path ? `https://image.tmdb.org/t/p/w500/${profile_path}` : `${temp}`} alt={name} width=\"150\" />\n    <p>{name}</p>\n    <p>{character}</p>\n  </li>\n);\n\nCastItem.propTypes = {\n  profile_path: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n\nexport default CastItem;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport movieApp from \"../../services/movieApi\";\nimport CastItem from \"./CastItem\";\nimport Loader from \"../../shared/Loader\";\n\nexport default class MovieCast extends Component {\n  PropTypes = {\n    prop: PropTypes,\n  };\n\n  state = {\n    cast: [],\n    loader: true,\n  };\n\n  componentDidMount() {\n    movieApp\n      .fetchActorsDetails(this.props.match.params.movieId)\n      .then((cast) => this.setState({ cast, loader: false }))\n      .catch(({ response }) => {\n        if (response.status === 404) {\n          return this.props.history.push(\"/404\");\n        }\n        console.log(response.status, \" response.status\");\n      });\n  }\n\n  render() {\n    const { cast, loader } = this.state;\n    const casts = cast.length ? (\n      <ul>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <CastItem key={id} profile_path={profile_path} name={name} character={character} />\n        ))}\n      </ul>\n    ) : (\n      <p>No information about cast!</p>\n    );\n    return <>{loader ? <Loader /> : casts}</>;\n  }\n}\n","import MovieCast from './MovieCast';\n\nexport default MovieCast;\n"],"sourceRoot":""}